using System;
using System.Collections.Generic;
using System.Text;

namespace NittyGritty.SourceGenerators
{
    internal class CodeWriter
    {
        public CodeWriter()
        {
            Content = new StringBuilder();
			ScopeTracker = new ScopeTracker(this);
            IndentLevel = 0;

			Content.AppendLine("// <auto-generated>");
			Content.AppendLine("// ******************************************************************");
			Content.AppendLine($"// This file has been generated by NittyGritty.SourceGenerators {typeof(CodeWriter).Assembly.GetName().Version}");
			Content.AppendLine("// ******************************************************************");
			Content.AppendLine("// </auto-generated>");
			Content.AppendLine();
		}
		
        StringBuilder Content { get; }

		ScopeTracker ScopeTracker { get; }

        int IndentLevel { get; set; }

        public void Append(string text) => Content.Append(text);

        public void AppendLine(string text) => Content.Append(new string('\t', IndentLevel)).AppendLine(text);

        public void AppendLine() => Content.AppendLine();

		public void AddIndent() => IndentLevel += 1;

		public void RemoveIndent() => IndentLevel -= 1;

		public IDisposable BeginScope(string line)
		{
			AppendLine(line);
			return BeginScope();
		}
		public IDisposable BeginScope()
		{
			AppendLine("{");
			AddIndent();
			return ScopeTracker;
		}

		public void EndLine() => Content.AppendLine();

		public void EndScope()
		{
			RemoveIndent();
			AppendLine("}");
		}

		public void StartLine() => Content.Append(new string('\t', IndentLevel));

		public override string ToString() => Content.ToString();

	}

	internal class ScopeTracker : IDisposable
	{
		public ScopeTracker(CodeWriter writer)
		{
			Writer = writer;
		}

		public CodeWriter Writer { get; }

		public void Dispose()
		{
			Writer.EndScope();
		}
	}
}
